{"version":3,"sources":["StateProvider.js","reducer.js","Search.js","Home.js","useGoogleSearch.js","keys.js","SearchPage.js","App.js","serviceWorker.js","index.js"],"names":["StateContext","createContext","StateProvider","reducer","initalState","children","Provider","value","useReducer","useStateValue","useContext","actionTypes","state","action","console","log","type","term","Search","hideButtons","dispatch","useState","input","setInput","history","useHistory","search","e","preventDefault","push","className","vaule","onChange","target","Button","onClick","variant","Home","to","Avatar","src","alt","useGoogleSearch","data","setData","useEffect","a","fetch","then","response","json","result","fetchData","SearchPage","searchInformation","formattedTotalResults","formattedSearchTime","items","map","item","href","link","pagemap","cse_image","length","displayLink","title","snippet","App","path","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","initialState","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.0d883ce5.chunk.js","sourcesContent":["import React, {createContext,useContext,useReducer} from \"react\";\r\n\r\nexport const StateContext = createContext();\r\nexport const StateProvider =({reducer,initalState,children \r\n}) => (\r\n        <StateContext.Provider value={useReducer(reducer,initalState)}>\r\n      {children}\r\n</StateContext.Provider>\r\n    );\r\nexport const useStateValue=() =>useContext(StateContext); ","export const initialState ={\r\n    term : null,\r\n};\r\n\r\nexport const actionTypes ={\r\n    SET_SEARCH_TERM : \"SET_SEARCH_TERM\"\r\n};\r\n\r\nconst reducer =(state,action) =>{\r\n    console.log(action);\r\n    switch(action.type){\r\n             case actionTypes.SET_SEARCH_TERM:\r\n        return{\r\n            ...state,\r\n            term: action.term,\r\n        };\r\n\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default reducer;","import React,{useState} from 'react';\r\nimport './Search.css';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport MicIcon from '@material-ui/icons/Mic';\r\nimport {Button} from '@material-ui/core';\r\nimport {useHistory} from \"react-router-dom\";\r\nimport {useStateValue} from \"./StateProvider\";\r\nimport {actionTypes} from \"./reducer\";\r\n\r\nfunction Search({hideButtons=false}) {\r\n    const [state,dispatch] = useStateValue();\r\n    const [input,setInput]=useState(''); \r\n    const history =useHistory();\r\n    const search = e => {\r\n        e.preventDefault();\r\n        // history.pushState('/search');\r\n        history.push('./search')\r\n        // console.log('hey guys',input)\r\n        dispatch({\r\n            type : actionTypes.SET_SEARCH_TERM,\r\n            term : input\r\n\r\n        })\r\n    }\r\n    return (\r\n        <form className='search'>\r\n            <div className='search__input'>\r\n             <SearchIcon className='search__inputIcon'/>\r\n             <input vaule={input} onChange={e => setInput(e.target.value)} />\r\n             <MicIcon />\r\n             </div>\r\n\r\n             {!hideButtons ? (\r\n             <div className='search__buttons'>\r\n                 <Button type='submit' onClick={search} variant='outlined'  >Gooogle Search</Button>\r\n                 <Button variant='outlined'    >I'm Feeling Lucky</Button>\r\n\r\n             </div>\r\n             ):(\r\n            <div className='search__buttons'>\r\n                <Button className=\"search__buttonHidden\" type='submit' onClick={search} variant='outlined'  >Gooogle Search</Button>\r\n                <Button className=\"search__buttonHidden\" variant='outlined'    >I'm Feeling Lucky</Button>\r\n            </div>\r\n            \r\n            )}\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default Search\r\n","import React from \"react\";\r\nimport \"./Home.css\";\r\nimport { Link } from \"react-router-dom\";\r\nimport AppsIcon from \"@material-ui/icons/Apps\";\r\nimport { Avatar } from \"@material-ui/core\";\r\nimport Search from \"./Search\"; \r\n\r\n\r\nfunction Home() {\r\n  return (\r\n    <div className=\"home\">\r\n      <div className=\"home__header\">\r\n        <div className=\"home__headerLeft\">\r\n          <Link to=\"/about\">About</Link>\r\n          <Link to=\"/store\">Store</Link>\r\n        </div>\r\n        <div className=\"home__headerRight\">\r\n          <Link to=\"/gmail\">Gmail</Link>\r\n          <Link to=\"/image\">Image</Link>\r\n          <AppsIcon />\r\n          <Avatar />\r\n        </div>\r\n      </div>\r\n      <div className=\"home__body\">\r\n        <img\r\n          src=\"https://www.google.com/images/branding/googlelogo/2x/googlelogo_color_272x92dp.png\"\r\n          alt=\"\"\r\n        />\r\n\r\n        <div className=\"home__inputContainer\">\r\n            {/* search */}\r\n            <Search />\r\n        </div>\r\n        \r\n\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Home;\r\n","import {useState,useEffect} from 'react';\r\nimport API_KEY from './keys';\r\n\r\nconst CONTEXT_KEY = \"256dbb4633c8062d6\"\r\nconst useGoogleSearch = (term) => {\r\n   const [data,setData] = useState(null);\r\n   useEffect(()=> {\r\n    const fetchData =async()=>\r\n    {\r\n        fetch(\r\n            `https://www.googleapis.com/customsearch/v1?key=${API_KEY}&cx=${CONTEXT_KEY}&q=${term}`\r\n\r\n        )\r\n        .then(response =>response.json())\r\n        .then(result => {\r\n            setData(result)\r\n        })\r\n    }\r\n    fetchData();\r\n   },[term])\r\n   return {data}\r\n};\r\n\r\nexport default useGoogleSearch\r\n","export const API_KEY =\"AIzaSyBJPLiyNZL1kbpyEWDFnzVnW-dDEP__wU0\";\r\n\r\nexport default API_KEY;","import React from 'react'\r\nimport { Link } from 'react-router-dom';\r\nimport './SearchPage.css'\r\nimport {useStateValue} from './StateProvider';\r\nimport useGoogleSearch from './useGoogleSearch';\r\nimport Search from \"./Search\";\r\nimport SearchIcon from \"@material-ui/icons/Search\";\r\nimport MoreVertRoundedIcon from \"@material-ui/icons/MoreVertRounded\";\r\nimport RoomRoundedIcon from \"@material-ui/icons/RoomRounded\";\r\nimport LocalOfferRoundedIcon from \"@material-ui/icons/LocalOfferRounded\";\r\nimport ImageRoundedIcon from \"@material-ui/icons/ImageRounded\";\r\nimport DescriptionIcon from \"@material-ui/icons/Description\";\r\n\r\nfunction SearchPage() {\r\n    const [{term},dispatch] =useStateValue();\r\n    const {data} =useGoogleSearch(term);\r\n     // https:developer.google.com/custom-search/v1/using_rest\r\n  // https://cse.google.com/cse/create/new\r\n\r\n  return (\r\n        <div className=\"searchPage\">\r\n            <div className='searchPage__header'>\r\n             <Link to='/'>\r\n             <img className=\"searchPage__logo\"\r\n             src='https://www.google.com/images/branding/googlelogo/2x/googlelogo_color_272x92dp.png'\r\n             alt=''\r\n             />\r\n\r\n             </Link>\r\n             <div className=\"searchPage__headerBody\">\r\n          <Search hideButtons />\r\n          <div className=\"searchPage__options\">\r\n            <div className=\"searchPage__optionsLeft\">\r\n              <div className=\"searchPage__option\">\r\n                <SearchIcon />\r\n                <Link to=\"/all\">ALL</Link>\r\n              </div>\r\n              <div className=\"searchPage__option\">\r\n                <DescriptionIcon />\r\n                <Link to=\"/news\">News</Link>\r\n              </div>\r\n              <div className=\"searchPage__option\">\r\n                <ImageRoundedIcon />\r\n                <Link to=\"/images\">Images</Link>\r\n              </div>\r\n              <div className=\"searchPage__option\">\r\n                <LocalOfferRoundedIcon />\r\n                <Link to=\"/shopping\">shopping</Link>\r\n              </div>\r\n              <div className=\"searchPage__option\">\r\n                <RoomRoundedIcon />\r\n                <Link to=\"/maps\">maps</Link>\r\n              </div>\r\n              <div className=\"searchPage__option\">\r\n                <MoreVertRoundedIcon />\r\n                <Link to=\"/more\">more</Link>\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"searchPage__optionsRight\">\r\n              <div className=\"searchPage_option\">\r\n                <Link to=\"/settings\">Settings</Link>\r\n              </div>\r\n              <div className=\"searchPage__option\">\r\n                <Link to=\"/tools\">Tools</Link>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      {true && (\r\n            <div className='searchPage__results'>\r\n               <p className='searchPage__resultCount'>\r\n                   About {data?.searchInformation.formattedTotalResults} Result ({data?.searchInformation.formattedSearchTime} seconds)\r\n                for {term}\r\n                </p>\r\n                {data?.items.map(item =>(\r\n                    <div className=\"searchPage__result\">\r\n                    <a className='searchPage__resultLink'\r\n                     href={item.link}>\r\n                    {item.pagemap?.cse_image?.length > 0 && item.pagemap?.cse_image[0]?.src &&(\r\n                            <img className='searchPage__resultImage'\r\n                            src= {item.pagemap?.cse_image[0]?.src}\r\n                            />\r\n                        )}\r\n                         {item.displayLink}\r\n                    </a>\r\n                    <a \r\n                    className='searchPage__resultTitle' href={item.link}>\r\n                       <h2>{item.title}</h2> \r\n                    </a>\r\n                    <p\r\n                    className='searchPage__resultSnippet'>\r\n                        {item.snippet}</p>                     \r\n\r\n\r\n                    </div>\r\n\r\n                ))}\r\n            </div> \r\n         )}\r\n     \r\n    </div>\r\n    )\r\n}\r\n\r\nexport default SearchPage\r\n","import React from 'react';\nimport './App.css';\nimport Home from './Home';\nimport {BrowserRouter as Router,Switch,Route} from 'react-router-dom';\nimport SearchPage from './SearchPage';\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Router>\n        <Switch>\n          <Route path='/search'>\n                <SearchPage/>\n          </Route>\n          <Route path='/'>\n            {/* home */}\n             <Home />\n          </Route>\n        </Switch>\n     \n     </Router>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport reducer,{initialState} from './reducer';\nimport { StateProvider } from './StateProvider';\n\nReactDOM.render(\n  <React.StrictMode>\n    <StateProvider initialState={initialState} reducer={reducer}>\n        <App />\n        </StateProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}